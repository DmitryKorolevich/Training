@model VC.Public.Models.Profile.ChangePasswordModel

@section Meta {
	<title>Vital Choice | Change Password</title>
}

<div class="working-area-holder">
	<div class="left-pane clean-border">
		@await Component.InvokeAsync("ProfileSidebar")
	</div>
	<div class="right-pane clean-indent">
		@using (Html.BeginForm("ChangePassword", "Profile", null, FormMethod.Post, new { @class = "form-regular medium-small border-form-left", role = "form" }))
		{
			@Html.AntiForgeryToken()
			<h4>Update Password</h4>
			<span class="form-control-hint">Must be at least 8 characters long, contain at least 1 numerical digit, 1 capital character and 1 special character.<br />Example: Dontuse!#1</span>
			@Html.ValidationSummary(true, "")
			<div class="form-group">
				@Html.LabelFor(m => m.OldPassword, new { @class = "control-label" })
				<div class="input-group">
					@Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.OldPassword, "")
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(m => m.Password, new { @class = "control-label" })
				<div class="input-group">
					@Html.PasswordFor(m => m.Password, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.Password, "")
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
				<div class="input-group">
					@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.ConfirmPassword, "")
				</div>
			</div>
			<div class="form-buttons-group">
				<input class="back-button" type="button" value="Back"/>
				<input class="yellow" type="submit" value="Update"/>
			</div>
		}
	</div>
</div>