@using System.Globalization;
@using System.Collections.Generic;
@using VitalChoice.Interfaces.Services
@model  VC.Public.Models.Profile.HealthWiseHistoryModel
@inject IAppInfrastructureService appInfrastructureService;

@section Meta {
    <title>Vital Choice | Current HealthWise Orders</title>
}

@{
    var infrastructure = appInfrastructureService.Data();
}

<div class="working-area-holder">
    <div class="left-pane clean-border">
        @await Component.InvokeAsync("ProfileSidebar")
    </div>
    <div class="right-pane clean-indent paid-orders">
        <div class="border-form-left">
            <h4>Current HealthWise Orders</h4>
            <div class="form-group">
                <p>
                    Earn rewards with our popular HealthWise "frequent online shopper" rewards program ...the more you spend, the more you get back ... there are no limits to the Rewards you can earn!
                </p>
                <p>
                    Whenever a HealthWise program member places 9 qualifying orders within one year, we send them a Gift Certificate equal to the average cost of those 9 orders ... a credit they can apply to future orders.
                </p>
                <p>
                    And, as our thanks for signing up, you will receive a 5% discount on your first HealthWise order!<br />
                    <a href="#">Learn More </a>
                </p>
                <hr />
            </div>
            <div class="form-regular">
                @if (Model != null)
                {
                    <span class="form-control-important-info message">
                        You currently have @Model.Count out of the 9 needed HealthWise orders.
                        @if (Model.Count != 0)
                        {
                            @:You average HealthWise order amount is @Model.AverageAmount.ToString("C2").
                        }
                        <br />
                        Your HealthWise year is scheduled to reset on @Model.EndDate.ToString("MM/dd/yyyy")
                    </span>
                }
                else
                {
                    <span class="form-control-important-info message">You currently have 0 out of the 9 needed HealthWise orders.</span>
                }
            </div>
            @if (Model != null)
            {
                <table class="standard-table">
                    <thead>
                        <tr>
                            <th>
                                Order #
                            </th>
                            <th>
                                Status
                            </th>
                            <th>
                                Order Name
                            </th>
                            <th>
                                Order Total
                            </th>
                            <th>
                                Order Date
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Items != null)
                        {
                            @foreach (var item in Model.Items)
                            {
                                <tr>
                                    <td><a href="#">@item.Id</a></td>
                                    <td>
                                        @if (item.OrderStatus.HasValue)
                                        {
                                            @infrastructure.OrderStatuses.Single(x => x.Key == (int)item.OrderStatus.Value).Text
                                        }
                                        else
                                        {
                                            @if (item.POrderStatus.HasValue)
                                            {
                                                @:P - @infrastructure.OrderStatuses.Single(x => x.Key == (int)item.POrderStatus.Value).Text
                                                <br />
                                            }
                                            @if (item.NPOrderStatus.HasValue)
                                            {
                                                @:NP - @infrastructure.OrderStatuses.Single(x => x.Key == (int)item.NPOrderStatus.Value).Text
                                                <br />
                                            }
                                        }
                                    </td>
                                    <td></td>
                                    <td>@item.Total.ToString("C2")</td>
                                    <td>@item.DateCreated.ToString("MM/dd/yyyy")</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>