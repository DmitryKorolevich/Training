@using System.Threading.Tasks
@using VC.Public.Helpers
@model VC.Public.Models.Profile.BillingInfoModel

@section Meta {
	<title>Vital Choice | Manage Billing Addresses</title>
}

@section PageScripts {
	<script src="@Url.Content("/app/common/dataAccess.js")"></script>
	<script src="@Url.Content("/app/modules/auth/registration.js")"></script>
    <script src="@Url.Content("/app/common/billing.js")"></script>
    <script src="@Url.Content("/app/modules/profile/billingInfo.js")"></script>
    <script src="@Url.Content("/app/modules/profile/gccheckform.js")"></script>
}

<script>
	var creditCardsJson = '@Html.Raw(ViewBag.CreditCards)';
	successMessage = '@ViewBag.SuccessMessage';
</script>

<div class="working-area-holder">
	<div class="left-pane clean-border">
		@await Component.InvokeAsync("ProfileSidebar")
	</div>
    <div class="right-pane clean-indent">
        @using (Html.BeginForm("ChangeBillingInfo", "Profile", null, FormMethod.Post, null, new {@class = "form-regular medium-small border-form-left", role = "form"}))
        {
            @Html.HiddenFor(m => m.Default, new { @id = "hdDefault" })
            @Html.AntiForgeryToken()
            <h4>Manage Billing Addresses</h4>
            <span class="form-control-important-info">You must provide all credit card details to add or update any saved credit card billing information.</span>
            <div class="form-group">
                <div class="input-group control-label-indent">
                    <input id="addNew" class="yellow inline-button" type="button" value="Add New"/>
                </div>
            </div>
            <div class="form-group">
                @Html.Label("SavedCards", "Saved Cards", new {@class = "control-label"})
                <div class="input-group">
                    <select class="form-control" id="ddCreditCardsSelection"></select>
					<input id="setDefaultSelected" class="left-indent-small inline-button" type="button" value="Set as Default" style="display:none;" />
					<input id="delSelected" class="red left-indent-small inline-button" type="button" value="Delete Card"/>
                </div>
            </div>
            <div class="form-group">
                <hr/>
            </div>
            @await Html.PartialAsync("_BillingDetailsInner", Model, ViewData)
            <div class="form-buttons-group">
                <input data-back-button="@Url.Action("TopFavoriteItems", "Profile")" type="button" value="Back"/>
                <input class="yellow" type="submit" value="Save"/>
            </div>
        }
    </div>
</div>