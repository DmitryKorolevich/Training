@using System.Globalization;
@using System.Collections.Generic;
@using VitalChoice.Interfaces.Services
@model  ICollection<VitalChoice.SharedWeb.Models.Help.HelpTicketListItemModel>
@inject IAppInfrastructureService appInfrastructureService;

@section Meta {
    <title>Vital Choice | Help Tickets</title>
}

@{
    var infrastructure = appInfrastructureService.Get();
}

<div class="working-area-holder">
    <div class="left-pane clean-border">
        @await Component.InvokeAsync("ProfileSidebar")
    </div>
    <div class="right-pane clean-indent paid-orders">
        <div class="border-form-left">
            @if (ViewBag.IdOrder > 0)
            {
                <h4>Help Desk</h4>
                <div class="form-group">
                    <span>Order #: <span class="info-text">@ViewBag.IdOrder</span></span><br />
                    <strong>Welcome to our Customer Service Desk.</strong><br /><br />
                    @Html.ActionLink("Create a Help Ticket", "HelpTicket", new { idorder = ViewBag.IdOrder }, new { @class = "button yellow pull-right" })
                    <span>Use this section of our store to exchange order-related messages with us.</span><br />
                    <span>Here is a summary of the messages exchanged with regard to this order:</span>
                </div>
                <table class="standard-table">
                    <thead>
                        <tr>
                            <th>
                                Priority
                            </th>
                            <th>
                                Summary
                            </th>
                            <th>
                                Last Updated
                            </th>
                            <th>
                                Status
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Any())
                        {
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <span class="label @(item.Priority == VitalChoice.Infrastructure.Domain.Entities.Help.TicketPriority.Medium ? "label-warning" : item.Priority == VitalChoice.Infrastructure.Domain.Entities.Help.TicketPriority.Low ? "label-info" : "label-danger" )">
                                            @infrastructure.Priorities.Single(x => x.Key == (int)item.Priority).Text
                                        </span>
                                    </td>
                                    <td>
                                        @Html.ActionLink(item.Summary, "HelpTicket", "Profile", new { id = item.Id })
                                    </td>
                                    <td>@item.DateEdited.ConvertToPST().ToString("MM/dd/yyyy hh:mm tt", System.Globalization.CultureInfo.InvariantCulture)</td>
                                    <td>
                                        <span class="label @(item.StatusCode == VitalChoice.Ecommerce.Domain.Entities.RecordStatusCode.NotActive ? "label-warning" : "label-info" )">
                                            @infrastructure.TicketStatuses.Single(x => x.Key == (int)item.StatusCode).Text
                                            <span>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>