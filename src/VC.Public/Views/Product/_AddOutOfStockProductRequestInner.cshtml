@using System.Threading.Tasks
@using Microsoft.Extensions.OptionsModel
@using VC.Public.Helpers
@using VitalChoice.Infrastructure.Domain.Options
@model VC.Public.Models.Product.AddOutOfStockProductRequestModel
@inject IOptions<AppOptions> appOptions;

<div id="addOutOfStockProductRequestDialogInner">
	<script>
		successMessage = '@ViewBag.SuccessMessage';
	</script>
	<form asp-controller="Product" asp-action="AddOutOfStockProductRequest" data-ajax-success="addOutOfStockProductRequestFormSubmitSuccess" data-ajax-failure="ajaxFormSubmitError" data-ajax="true" data-method="post" data-ajax-mode="replace" data-ajax-update="#addOutOfStockProductRequestDialogInner" class="form-regular medium-small content-ajax-form">
        @Html.HiddenFor(x => x.ProductId)
		@Html.ValidationSummary(true, "")
		<div class="form-group">
			@Html.LabelFor(m => m.Name, new {@class = "control-label"})
			<div class="input-group">
				@Html.TextBoxFor(m => m.Name, new {@class = "form-control bigger"})
				@Html.ValidationMessageFor(m => m.Name)
			</div>
		</div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "control-label" })
            <div class="input-group">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control bigger" })
                @Html.ValidationMessageFor(m => m.Email)
            </div>
        </div>
		<div class="form-group google-captcha" id="googleCaptcha"></div>
	</form>
</div>