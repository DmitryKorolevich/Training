@using VitalChoice.Interfaces.Services
@using VC.Public.Helpers
@using VC.Public.Models.Auth
@using VitalChoice.Interfaces.Services.Settings
@using Microsoft.Extensions.Options
@using VitalChoice.Infrastructure.Domain.Options
@using VitalChoice.Infrastructure.Domain.Transfer
@model RegisterWholesaleAccountModel
@inject ReferenceData appInfrastructureService;
@inject IOptions<AppOptions> appOptions;

@{
    var infrastructure = appInfrastructureService;
}

<dv class="content-ajax-form-wrapper">
    <div id="registerWholesaleAccountFormWrapperInner">
        <script>
            successMessage = '@ViewBag.SuccessMessage';
            var captchaSiteKey = "@appOptions.Value.GoogleCaptcha.PublicKey";
        </script>
        <form asp-controller="Account" asp-action="RegisterWholesaleAccount" data-ajax-begin="registerWholesaleFormSubmitBegin" data-ajax-complete="registerWholesaleFormSubmitComplete" data-ajax-success="registerWholesaleFormSubmitSuccess" data-ajax-failure="ajaxFormSubmitError" data-ajax="true" data-method="post" data-ajax-mode="replace" data-ajax-update="#registerWholesaleAccountFormWrapperInner" class="form-regular medium content-ajax-form">
            <input id="hdCountry" value="@Html.DisplayForEx(x=>x.IdCountry)" type="hidden">
            <input id="hdState" value="@Html.DisplayForEx(x=>x.IdState)" type="hidden">
            @Html.HiddenFor(m => m.Email)
            <div class="sub-title"><span>Create a Password</span></div>
            <span class="form-control-important-info">Must be at least 8 characters long, contain at least 1 numerical digit, 1 capital character, 1 lowercase character and 1 special character.<br />Example: Dontuse!#1</span>
            @Html.ValidationSummary(true, "")
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                <div class="input-group">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                <div class="input-group">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </div>
            </div>

            <div class="sub-title"><span>Profile Address</span></div>
            <div class="form-group">
                @Html.LabelFor(m => m.TradeClass, new { @class = "control-label" })
                <div class="input-group">
                    @Html.DropDownListFor(m => m.TradeClass, infrastructure.TradeClasses.Select(p => new SelectListItem() { Text = p.Text, Value = p.Key.ToString(), }).ToList(), String.Empty, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.TradeClass, "")
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PromotingWebsites, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextAreaFor(m => m.PromotingWebsites, new { @class = "form-control bigger line-limit", @rows = 4, @data_line_limit=4 })
                    @Html.ValidationMessageFor(m => m.PromotingWebsites)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.FirstName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LastName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Company, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Company, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Company)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.IdCountry, new { @class = "control-label" })
                <div class="input-group">
                    @Html.DropDownListFor(m => m.IdCountry, new List<SelectListItem>(), new { @class = "form-control", @id = "ddCountry" })
                    @Html.ValidationMessageFor(m => m.IdCountry)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Address1, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Address1, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Address1)
                </div>
            </div>
            <div class="form-group">
                <label class="control-label"></label>
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Address2, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Address2)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.City, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.City)
                </div>
            </div>
            <div class="form-group">
                <!--todo-->
                @Html.LabelFor(m => m.IdState, new { @class = "control-label" })
                <div class="input-group">
                    @Html.DropDownListFor(m => m.IdState, new List<SelectListItem>(), new { @class = "form-control", @id = "ddState" })
                    @Html.ValidationMessageFor(m => m.IdState)
                </div>
            </div>
            <div class="form-group">
                <!--todo-->
                @Html.LabelFor(m => m.County, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBoxFor(m => m.County, new { @class = "form-control", @id = "txtState" })
                    @Html.ValidationMessageFor(m => m.County)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PostalCode, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBoxFor(m => m.PostalCode, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PostalCode)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Phone, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control phone-mask" })
                    @Html.ValidationMessageFor(m => m.Phone)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Fax, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Fax, new { @class = "form-control phone-mask" })
                    @Html.ValidationMessageFor(m => m.Fax)
                </div>
            </div>
            <div class="form-group">
                <hr />
            </div>
            <div class="form-group">
                <div class="message-group">
                    <label>
                        @Html.CheckBoxFor(m => m.IsAllowAgreement, new { @class = "form-control", @data_val = "true", @data_val_checkboxtrue = "Please agree to the terms and conditions." })
                        <span>I agree to the terms and conditions of the <a href="#" target="_blank">Vital Choice Wholesale Agreement</a>.</span><br>
                    </label>
                    @Html.ValidationMessageFor(m => m.IsAllowAgreement)
                </div>
            </div>
            <div class="form-buttons-group">
                <input type="submit" value="Submit My Application" class="yellow" />
            </div>
            <div class="clear"></div>
        </form>
    </div>
</dv>
