@using System.Threading.Tasks
@using VC.Public.Models.Auth
@model CreateAccountModel

@section Meta {
	<title>Vital Choice | Activation</title>
}

<div class="working-area-holder">
	@using (Html.BeginForm("Activate", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-regular medium-small", role = "form" }))
	{
		@Html.HiddenFor(m => m.PublicId)
		@Html.AntiForgeryToken()
		<h4>Account Login</h4>
		@Html.ValidationSummary(true, "", new { @class = "form-validation-summary" })
		<div class="form-group">
			@Html.LabelFor(m => m.Email, new { @class = "control-label" })
			<div class="input-group">
				@Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.Email, "")
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(m => m.Password, new {@class = "control-label"})
			<div class="input-group">
				@Html.PasswordFor(m => m.Password, new {@class = "form-control"})
				@Html.ValidationMessageFor(m => m.Password, "")
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
			<div class="input-group">
				@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
				@Html.ValidationMessageFor(m => m.ConfirmPassword, "")
			</div>
		</div>
		<div class="form-buttons-group">
			<input type="submit" value="Activate"/>
		</div>
	}
	<div class="form-group">
		<hr />
	</div>
</div>