@using System.Threading.Tasks
@using VC.Public.Helpers
@model VC.Public.Models.Checkout.AddUpdateBillingAddressModel

@section Meta {
	<title>Wild Seafood & Organics - Vital Choice</title>
}

@{
	Layout = "~/Views/Shared/_ViewCartLayout.cshtml";
}

@section PageScripts {
	<script src="@Url.Content("/app/modules/checkout/checkoutMain.js")"></script>
	<script src="@Url.Content("/app/common/dataAccess.js")"></script>
	<script src="@Url.Content("/app/modules/auth/registration.js")"></script>
	<script src="@Url.Content("/app/modules/checkout/billingInfo.js")"></script>
}

<script>
	successMessage = '@ViewBag.SuccessMessage';
</script>

<div class="checkout-step-container working-area-holder">
	<img src="/assets/images/checkout/step2.gif"/>
	<h4 class="checkout-step-heading">2. Billing Address Details</h4>
	<span class="checkout-notification-important">Please enter your billing address below.</span>
	<span class="checkout-notification-simple">An accurate billing address is essential to get your order to you quickly.</span>
	<div class="columns-container checkout-columns-container">
		@using (Html.BeginForm("ChangeBillingInfo", "Profile", null, FormMethod.Post, new {@class = "form-regular medium-small", role = "form"}))
		{
			<input id="hdCountry" value="@Html.DisplayForEx(x => x.BillingAddress.IdCountry)" type="hidden">
			<input id="hdState" value="@Html.DisplayForEx(x => x.BillingAddress.IdState)" type="hidden">
			@Html.AntiForgeryToken()
			@Html.ValidationSummary(true, "")
			<div class="form-group">
				@Html.Label("SavedCards", "Saved Cards", new { @class = "control-label" })
				<div class="input-group">
					<select class="form-control" id="ddCreditCardsSelection"></select>
					@*@Html.DropDownListFor(x=>x.BillingAddress.Cer)*@
				</div>
			</div>
			<div class="form-group">
				<div class="checkout-sections-divider"></div>
			</div>
			<div class="two-columns-block">
				<div class="form-group">
					@Html.LabelFor(m => m.Email, new {@class = "control-label"})
					<div class="input-group">
						@Html.TextBoxFor(m => m.Email, new {@class = "form-control"})
						@Html.ValidationMessageFor(m => m.Email)
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(m => m.BillingAddress.FirstName, new {@class = "control-label"})
					<div class="input-group">
						@Html.TextBoxFor(m => m.BillingAddress.FirstName, new {@class = "form-control"})
						@Html.ValidationMessageFor(m => m.BillingAddress.FirstName)
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(m => m.BillingAddress.LastName, new {@class = "control-label"})
					<div class="input-group">
						@Html.TextBoxFor(m => m.BillingAddress.LastName, new {@class = "form-control"})
						@Html.ValidationMessageFor(m => m.BillingAddress.LastName)
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(m => m.BillingAddress.Company, new {@class = "control-label"})
					<div class="input-group">
						@Html.TextBoxFor(m => m.BillingAddress.Company, new {@class = "form-control"})
						@Html.ValidationMessageFor(m => m.BillingAddress.Company)
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(m => m.BillingAddress.IdCountry, new {@class = "control-label"})
					<div class="input-group">
						@Html.DropDownListFor(m => m.BillingAddress.IdCountry, new List<SelectListItem>(), new {@class = "form-control", @id = "ddCountry"})
						@Html.ValidationMessageFor(m => m.BillingAddress.IdCountry)
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(m => m.BillingAddress.Address1, new {@class = "control-label"})
					<div class="input-group">
						@Html.TextBoxFor(m => m.BillingAddress.Address1, new {@class = "form-control"})
						@Html.ValidationMessageFor(m => m.BillingAddress.Address1)
					</div>
				</div>
				<div class="form-group">
					<label class="control-label"></label>
					<div class="input-group">
						@Html.TextBoxFor(m => m.BillingAddress.Address2, new {@class = "form-control"})
						@Html.ValidationMessageFor(m => m.BillingAddress.Address2)
					</div>
				</div>
			</div>
			<div class="two-columns-block">
				<div class="form-group">
					@Html.LabelFor(m => m.BillingAddress.City, new {@class = "control-label"})
					<div class="input-group">
						@Html.TextBoxFor(m => m.BillingAddress.City, new {@class = "form-control"})
						@Html.ValidationMessageFor(m => m.BillingAddress.City)
					</div>
				</div>
				<div class="form-group">
					<!--todo-->
					@Html.LabelFor(m => m.BillingAddress.IdState, new {@class = "control-label"})
					<div class="input-group">
						@Html.DropDownListFor(m => m.BillingAddress.IdState, new List<SelectListItem>(), new {@class = "form-control", @id = "ddState"})
						@Html.ValidationMessageFor(m => m.BillingAddress.IdState)
					</div>
				</div>
				<div class="form-group">
					<!--todo-->
					@Html.LabelFor(m => m.BillingAddress.County, new {@class = "control-label"})
					<div class="input-group">
						@Html.TextBoxFor(m => m.BillingAddress.County, new {@class = "form-control", @id = "txtState"})
						@Html.ValidationMessageFor(m => m.BillingAddress.County)
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(m => m.BillingAddress.PostalCode, new {@class = "control-label"})
					<div class="input-group">
						@Html.TextBoxFor(m => m.BillingAddress.PostalCode, new {@class = "form-control"})
						@Html.ValidationMessageFor(m => m.BillingAddress.PostalCode)
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(m => m.BillingAddress.Phone, new {@class = "control-label"})
					<div class="input-group">
						@Html.TextBoxFor(m => m.BillingAddress.Phone, new {@class = "form-control phone-mask"})
						@Html.ValidationMessageFor(m => m.BillingAddress.Phone)
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(m => m.BillingAddress.Fax, new {@class = "control-label"})
					<div class="input-group">
						@Html.TextBoxFor(m => m.BillingAddress.Fax, new {@class = "form-control phone-mask"})
						@Html.ValidationMessageFor(m => m.BillingAddress.Fax)
					</div>
				</div>
			</div>
			<div class="form-group">
				<div class="checkout-sections-divider"></div>
			</div>
			<div class="form-group">
				<span class="checkout-notification-important">For faster checkout and to receive customer rewards and incentives please register your account by providing a password.</span>
			</div>
			<span id="spPasswordHint" class="form-control-important-info">Must be at least 8 characters long, contain at least 1 numerical digit, 1 capital character and 1 special character.<br />Example: Dontuse!#1</span>
			<div class="form-group">
				@Html.LabelFor(m => m.Password, new { @class = "control-label" })
				<div class="input-group">
					@Html.PasswordFor(m => m.Password, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.Password, "")
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(m => m.ConfirmPassword, new {@class = "control-label"})
				<div class="input-group">
					@Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control"})
					@Html.ValidationMessageFor(m => m.ConfirmPassword, "")
				</div>
			</div>
			<span id="spGuestNotify" style="display: none;" class="form-control-important-info">By checking out as a guest you will not be able to retrieve your order history or receive all the benefits of a registered user.</span>
			<div class="form-group">
				<label class="control-label"></label>
				<div class="input-group">
					<label class="bold">
						@Html.CheckBoxFor(m => m.GuestCheckout, new {@class = "form-control"})
						No thank you. I would like to checkout as a guest
					</label>
				</div>
			</div>
			<img class="billing-advert-image" src="/Assets/images/checkout/subscribe-promo-bar-5-16-13-A.png"/>
			<div class="form-group">
				<label class="control-label"></label>
				<div class="input-group">
					<label class="multiline-checkbox-container">
						@Html.CheckBoxFor(m => m.SendNews, new {@class = "form-control"})
						Send weekly Offers, Recipes, and Food/Health News via the <i>Vital Choices</i> e-letter.<br /><br />
						<span class="shopping-notice-note">NOTE:</span>If you already get <i>Vital Choices</i>, DO NOT UN-CHECK THIS BOX unless you want to cancel it … we won’t <br/>	duplicate your subscription!
					</label>
				</div>
			</div>
			<div class="form-group">
				<label class="control-label"></label>
				<div class="input-group">
					<label class="multiline-checkbox-container">
						@Html.CheckBoxFor(m => m.SendCatalog, new {@class = "form-control"})
						Send me the award-winning Vital Choice catalog on a seasonal basis.<br/><br/>
						<a href="#">Our privacy policy</a>
					</label>
				</div>
			</div>
			<div class="form-buttons-group">
				<input class="arrow-left-red" type="button" value="Back" />
				<input class="arrow-right-blue" type="submit" value="Continue" />
			</div>
		}
	</div>
</div>