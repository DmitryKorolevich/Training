@using System.Threading.Tasks
@using Microsoft.Extensions.Options
@using VC.Public.Helpers
@using VitalChoice.Infrastructure.Domain.Options
@model VC.Public.Models.Checkout.EGiftSendEmailModel
@inject IOptions<AppOptions> appOptions;

<div id="sendEGiftEmail" class="reivew-order-info receipt-step receipt-egift-email-wrapper">
    <script>
        successMessage = '@ViewBag.SuccessMessage';
    </script>
    <div class="reivew-info-box">
        <div class="review-header-container">
            <span>Notify Recipient</span>
        </div>
        <div class="review-box-line">
            <span class="review-info-value">Your order contains an E-Gift certificate(s): If you enter the name and e-mail for the recipient of this E-Gift Certificate(s), we will send an email notification when the order is processed.</span>
        </div>
        <form asp-controller="Checkout" asp-action="SendEGiftEmail" data-ajax-success="ajaxFormSubmitSuccess" data-ajax-failure="ajaxFormSubmitError" data-ajax="true" data-method="post" data-ajax-mode="replace" data-ajax-update="#sendEGiftEmail" class="form-regular medium-small">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "")
            <div class="form-group review-box-line margin-top-small">
                @Html.LabelFor(m => m.Recipient, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Recipient, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Recipient)
                </div>
            </div>
            <div class="form-group review-box-line">
                @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
            </div>
            <div class="form-group review-box-line">
                @Html.LabelFor(m => m.Message, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextAreaFor(m => m.Message, new { @class = "form-control checkout-huge", rows = "5" })
                    @Html.ValidationMessageFor(m => m.Message)
                </div>
            </div>
            <div class="form-group review-box-line checkbox">
                <label class="control-label">E-Gift certificates</label>
                <label class="input-group bold">
                    @Html.CheckBoxFor(m => m.All, new { @class = "form-control" })
                    <span>All</span>
                </label>
            </div>
            @for (var i = 0; i < Model.Codes.Count; i++)
            {
                <div class="form-group review-box-line checkbox">
                    <label class="control-label">&nbsp;</label>
                    <label class="input-group bold">
                        <input type="checkbox" class="form-control" name="SelectedCodes" value="@Model.Codes[i].Code" />
                        <span>@Model.Codes[i].Code</span>
                    </label>
                </div>
            }
            <div class="form-buttons-group">
                <input class="button blue" type="submit" value="Send Email">
            </div>
        </form>
    </div>
</div>