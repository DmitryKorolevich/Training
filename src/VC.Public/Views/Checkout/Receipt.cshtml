@{
	Layout = "~/Views/Shared/_ViewCartLayout.cshtml";
}

@using VC.Public.Models.Cart
@model VC.Public.Models.Checkout.ReceiptModel

@section PageScripts {
	<script src="@Url.Content("/app/modules/checkout/checkoutMain.js")"></script>
}

@section Meta {
	<title>Wild Seafood & Organics - Vital Choice</title>
}

<div class="checkout-step-container working-area-holder">
	<img class="checkout-step-banner" src="/assets/images/checkout/step5.jpg"/>
	<div class="centered-horizontal">
		<h4 class="checkout-step-heading centered-horizontal">Thank You for Your Order!</h4>
		<span class="checkout-notification-simple">Your order has been processed and a confirmation email has been sent to the address you provided.<br/>
			If you see any errors, please send the details, including your 6-digit order number<br/>
			and your telephone number, to <a href="#">info@vitalchoice.com</a> or call 1-800-608-4825.<br/>
		</span>
		<span class="checkout-notification-simple margin-top-small">
			We will send you a Shipping Notification email when your order ships.<br />
			Frozen foods ship separately, and generally arrive before non-perishable goods.<br />
			As applicable, you will receive separate Shipping Notification emails for frozen and non-perishable goods.<br />
		</span>
		<span class="checkout-notification-simple margin-top-reasonable">
			<span class="shopping-notice-note">NOTE:</span> If you ordered an e-Gift, please scroll down to the “Notify Recipient” section,<br/>
			enter recipient’s name, email address, and your message where indicated, then click “Send Email”.
		</span>
		<div class="margin-top-reasonable">
			<a href="/" class="button arrow-left-red">Continue Shopping</a>
		</div>
	</div>
	<div class="checkout-sections-divider margin-top-reasonable margin-bottom-small"></div>
	<div class="receipt-info-line">
		@Html.LabelFor(x=>x.OrderNumber, null,new { @class= "bold" }):<span>@Model.OrderNumber</span>
	</div>
	<div class="receipt-info-line">
		@Html.LabelFor(x => x.OrderDate, null, new { @class = "bold" }):<span>@Model.OrderDate.ToString("MM/dd/yyyy")</span>
	</div>
	<div class="reivew-order-info receipt-step">
		<div class="reivew-info-box">
			<div class="review-header-container">
				<span>Bill to Details</span>
			</div>
			@foreach (var item in Model.BillToAddress)
			{
				<div class="review-box-line">
					@if (!string.IsNullOrWhiteSpace(item.Key))
					{
						<span class="review-info-label">@item.Key:</span>
					}
					<span class="review-info-value">@item.Value</span>
				</div>
			}
		</div>
		<div class="reivew-info-box">
			<div class="review-header-container">
				<span>Ship to Details</span>
			</div>
			@foreach (var item in Model.ShipToAddress)
			{
				<div class="review-box-line">
					@if (!string.IsNullOrWhiteSpace(item.Key))
					{
						<span class="review-info-label">@item.Key:</span>
					}
					<span class="review-info-value">@item.Value</span>
				</div>
			}
		</div>
	</div>
	<div class="margin-bottom-small"></div>
	<div class="receipt-sku-details">
		<table class="standard-table cart-items-list">
			<thead>
			<tr>
				<th>
					Qty
				</th>
				<th>
					SKU
				</th>
				<th>
					Description
				</th>
				<th>
					Unit Price
				</th>
				<th>
					Price
				</th>
			</tr>
			</thead>
			<tbody>
			@if (Model.Skus.Any())
			{
				foreach (var t in Model.Skus)
				{
					<tr>
						<td>@t.Quantity</td>
						<td>@t.Code</td>
						<td>@t.DisplayName</td>
						<td>@((t.Price ?? 0).ToString("C2"))</td>
						<td>@((t.SubTotal ?? 0).ToString("C2"))</td>
					</tr>
				}
			}
			else
			{
				<tr><td colspan="6">No Items Added</td></tr>
			}
			</tbody>
		</table>
	</div>
	@if (Model.PromoSkus.Any())
	{
		<div class="receipt-sku-details">
			<label class="receipt-promo-title">Promo Products</label>
			<table class="standard-table cart-items-list">
				<thead>
				<tr>
					<th>
						Qty
					</th>
					<th>
						SKU
					</th>
					<th>
						Description
					</th>
					<th>
						Unit Price
					</th>
					<th>
						Price
					</th>
				</tr>
				</thead>
				<tbody>
				@foreach (var t in Model.PromoSkus)
				{
					<tr>
						<td>@t.Quantity</td>
						<td>@t.Code</td>
						<td>@t.DisplayName</td>
						<td>@((t.Price ?? 0).ToString("C2"))</td>
						<td>@((t.SubTotal ?? 0).ToString("C2"))</td>
					</tr>
				}
				</tbody>
			</table>
		</div>
	}
	<div class="receipt-shipping-method">
		<label>Shipping:</label>
		<div class="receipt-shipping-linecontainer">
			<div class="receipt-shipping-line">
				<label class="cart-total-value">
					Standard Shipping
				</label>
			</div>
			@if (Model.ShippingUpgradeNP.HasValue)
			{
				<div class="receipt-shipping-line">
					<label class="cart-total-value">
						@Model.ShippingUpgradeNPOptions.Single(x => x.Key == Model.ShippingUpgradeNP).Text
					</label>
				</div>
			}
			@if (Model.ShippingUpgradeP.HasValue)
			{
				<div class="receipt-shipping-line">
					<label class="cart-total-value">
						@Model.ShippingUpgradePOptions.Single(x => x.Key == Model.ShippingUpgradeP).Text
					</label>
				</div>
			}
		</div>
	</div>
	<div class="cart-order-totals">
		<div class="cart-total-line">
			@Html.LabelFor(x => x.SubTotal)
			<label class="cart-total-value">
				@Model.SubTotal.ToString("C2")
			</label>
		</div>
		@if (Model.DiscountTotal.HasValue && Model.DiscountTotal.Value != 0)
		{
			<div class="cart-total-line">
				@Html.LabelFor(x => x.DiscountTotal)
				<label class="cart-total-value">
					@Model.DiscountTotal.Value.ToString("C2")
				</label>
			</div>
		}
		@if (Model.GiftCertificatesTotal.HasValue && Model.GiftCertificatesTotal.Value != 0)
		{
			<div class="cart-total-line">
				@Html.LabelFor(x => x.GiftCertificatesTotal)
				<label class="cart-total-value">
					@Model.GiftCertificatesTotal.Value.ToString("C2")
				</label>
			</div>
		}
		<div class="cart-total-line">
			@Html.LabelFor(x => x.ShippingCost)
			<label class="cart-total-value">
				@(Model.ShippingCost.HasValue ? Model.ShippingCost.Value.ToString("C2") : "FREE!")
			</label>
		</div>
		<div class="cart-total-line">
			@Html.LabelFor(x => x.Tax)
			<label class="cart-total-value">
				@Model.Tax.ToString("C2")
			</label>
		</div>
		<div class="cart-total-line cart-order-summary">
			@Html.LabelFor(x => x.OrderTotal)
			<label class="cart-total-value">
				@Model.OrderTotal.ToString("C2")
			</label>
		</div>
	</div>
</div>