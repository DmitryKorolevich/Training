@using Microsoft.Extensions.OptionsModel
@using VitalChoice.Infrastructure.Domain.Options
@model VC.Public.Models.Help.CustomerServiceRequestModel
@inject IOptions<AppOptions> appOptions;

@{
    var types = new List<SelectListItem>() {
                new SelectListItem() { Text="Customer Service", Value=((int)VC.Public.Models.Help.CustomerServiceRequestType.CustomerService).ToString() },
                new SelectListItem() { Text="Feedback", Value=((int)VC.Public.Models.Help.CustomerServiceRequestType.Feedback).ToString() },
            };
}

<div class="content-ajax-form-wrapper">
    <div id="contactCustomerServiceFormWrapperInner">
        <script>
            successMessage = '@ViewBag.SuccessMessage';
            var captchaSiteKey = "@appOptions.Value.GoogleCaptcha.PublicKey";
        </script>
        <form asp-controller="Help" asp-action="ContactCustomerService" data-ajax-success="ajaxFormSubmitSuccess" data-ajax-failure="ajaxFormSubmitError" data-ajax="true" data-method="post" data-ajax-mode="replace" data-ajax-update="#contactCustomerServiceFormWrapperInner" class="form-regular medium-small content-ajax-form">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "")
            <div class="form-group">
                @Html.LabelFor(m => m.Type, new { @class = "control-label" })
                <div class="input-group">
                    @Html.DropDownListFor(m => m.Type, types, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Type, "")
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Comment, new { @class = "control-label" })
                <div class="input-group">
                    @Html.TextAreaFor(m => m.Comment, new { @class = "form-control bigger", @rows = 10 })
                    @Html.ValidationMessageFor(m => m.Comment)
                </div>
            </div>
            <div class="form-group">
                <label class="control-label"></label>
                <div class="google-captcha pull-left" id="googleCaptcha"></div>
            </div>
            <div class="form-buttons-group">
                <input class="yellow" type="submit" value="Submit" />
            </div>
        </form>
    </div>
</div>